Operators

Some of these may be unfamiliar to you, but look them up anyway. Find out what they do, and if
you still canâ€™t figure it out, save it for later.

+   :   addition operator - adds the two operands

-   :   subtraction operator - subtracts second operand from the first
        unary minus - negates the operand

*   :   multiplication - multiplies the two operands

**  :   exponentiation - returns the first operand raised to the power of the second
        operand

/   :   division - returns the first operand divided by the second operand

//  :   Floor division - returns the integer part of the quotient from dividing the 
        first operand by the second 

%   :   Modulus - the remainder when dividing the fist operand by the second

<   :   Less than operator  - check if the lhs value is less than the rhs value

>   :   Greater than operator - check if the lhs value is greater than the rhs value

<=  :   Less than equal to operator - check if lhs value is less than or equal to the rhs value

>=  :   Greater than equal to operator - Check if lhs value is greater than equal to rhs value

==  :   Equality operator - Check if two operands are equal

!=  :   Not equal operator - Check if the two operands are not equal

=   :   assignment operator - assigns the right operand to the operand 

+=  :   addition assignment operator - adds the right operand to the value stored
        in the rhs variable and then assigns it to the variable

-=  :   subtraction assignment operator - subtracts the rhs value from the value 
        stored in the lhs variable and then assigns it to the variable

*=  :   multiplication assignment operator - multiplies the rhs value to the value
        stored in the lhs variable and then assigns it to the variable 

/=  :   division assignment operator - divides the value stored in the lhs variable
        by the rhs value and then assigns the quotient to the variable

//= :   floor division assignment operator - carries out floor division of the value
        stored in the lhs variable by and then assigns the result to the variable

%=  :   module assignment operator - carries out modulo operation of the value in 
        lhs variable by the rhs value and then assigns it to the lhs variable

**= :   exponentiation assignment operator - assigns the value stored in the lhs
        variable raised to the power of the rhs value, to the variable
